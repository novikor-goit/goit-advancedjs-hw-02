{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nlet userSelectedDate = null;\n\nconst button = document.querySelector('[data-start]');\nfunction switchButtonState(enabled) {\n  button.disabled = !enabled;\n}\n\n/**\n * @param {Date} selectedDate\n */\nfunction validateDateTime(selectedDate) {\n  if (selectedDate.getTime() <= Date.now()) {\n    iziToast.error({\n      message: 'Please choose a date in the future',\n    });\n    switchButtonState(false);\n    return;\n  }\n  switchButtonState(true);\n  userSelectedDate = selectedDate;\n}\n\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    validateDateTime(selectedDates[0]);\n  },\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n\nfunction renderCountdown(timeDimensions) {\n  for (const [dimension, value] of Object.entries(timeDimensions)) {\n    const elem = document.querySelector(`[data-${dimension}]`);\n    elem.innerText = String(value).padStart(2, '0');\n  }\n}\n\nlet intervalId = null;\nbutton.addEventListener('click', () => {\n  clearInterval(intervalId);\n  switchButtonState(false);\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const remainingTime = userSelectedDate ? userSelectedDate - now : 0;\n\n    if (remainingTime <= 0) {\n      iziToast.success({\n        message: 'Time is up!',\n      });\n      switchButtonState(true);\n      clearInterval(intervalId);\n      return;\n    }\n\n    renderCountdown(convertMs(remainingTime));\n  }, 1000);\n});\n"],"names":["userSelectedDate","button","switchButtonState","enabled","validateDateTime","selectedDate","iziToast","flatpickr","selectedDates","convertMs","ms","renderCountdown","timeDimensions","dimension","value","elem","intervalId","remainingTime"],"mappings":"2FAMA,IAAIA,EAAmB,KAEvB,MAAMC,EAAS,SAAS,cAAc,cAAc,EACpD,SAASC,EAAkBC,EAAS,CAClCF,EAAO,SAAW,CAACE,CACrB,CAKA,SAASC,EAAiBC,EAAc,CACtC,GAAIA,EAAa,QAAO,GAAM,KAAK,IAAG,EAAI,CACxCC,EAAS,MAAM,CACb,QAAS,oCACf,CAAK,EACDJ,EAAkB,EAAK,EACvB,MACJ,CACEA,EAAkB,EAAI,EACtBF,EAAmBK,CACrB,CAEAE,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAiBI,EAAc,CAAC,CAAC,CAClC,CACH,CAAC,EAED,SAASC,EAAUC,EAAI,CAOrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC5D,CACH,CAEA,SAASC,EAAgBC,EAAgB,CACvC,SAAW,CAACC,EAAWC,CAAK,IAAK,OAAO,QAAQF,CAAc,EAAG,CAC/D,MAAMG,EAAO,SAAS,cAAc,SAASF,CAAS,GAAG,EACzDE,EAAK,UAAY,OAAOD,CAAK,EAAE,SAAS,EAAG,GAAG,CAClD,CACA,CAEA,IAAIE,EAAa,KACjBf,EAAO,iBAAiB,QAAS,IAAM,CACrC,cAAce,CAAU,EACxBd,EAAkB,EAAK,EACvBc,EAAa,YAAY,IAAM,CAE7B,MAAMC,EAAgBjB,EAAmBA,EAD7B,IAAI,KACkD,EAElE,GAAIiB,GAAiB,EAAG,CACtBX,EAAS,QAAQ,CACf,QAAS,aACjB,CAAO,EACDJ,EAAkB,EAAI,EACtB,cAAcc,CAAU,EACxB,MACN,CAEIL,EAAgBF,EAAUQ,CAAa,CAAC,CACzC,EAAE,GAAI,CACT,CAAC"}